
buildscript {
    ext {
        grpcJavaVersion = "1.4.0"
        springBootVersion = "1.5.3.RELEASE"
        protobufVersion = "3.3.0"
    }
    repositories { 
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url "https://plugins.gradle.org/m2/"} 
    }
    dependencies { classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.1' }
    dependencies { classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}" }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'

apply plugin: 'com.google.protobuf'
apply plugin: 'org.springframework.boot'

repositories {
        mavenCentral()
        jcenter()
}

dependencies {
    compile "io.grpc:grpc-stub:${grpcJavaVersion}"
    compile "io.grpc:grpc-protobuf:${grpcJavaVersion}"
    compile "io.grpc:grpc-netty:${grpcJavaVersion}"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile 'org.springframework.boot:spring-boot-starter-web'

    compile "org.lognet:grpc-spring-boot-starter:2.0.3"

    testCompile 'org.springframework.boot:spring-boot-starter-aop'
    testCompile 'org.springframework.boot:spring-boot-starter-test'

    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.16'
}
sourceSets {
    main {
        java {
            srcDir 'src/main/protoGen'
        }
    }
}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcJavaVersion}"
        }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                java{
                    outputSubDir = 'protoGen'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'protoGen'
                }
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/"
}

task cleanProtoGen{
    doFirst{
           delete("$projectDir/src/main/protoGen")
    }
}
clean.dependsOn cleanProtoGen

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
    }
}


//remove redundant compile check on generated code.
eclipse {
	classpath {
		file {
			whenMerged {
				entries.each {
					source ->
					if (source.kind == 'src' && source.path.contains('protoGen')) {
						source.entryAttributes['ignore_optional_problems'] = 'true'
					}

				}
			}
		}
	}
}
